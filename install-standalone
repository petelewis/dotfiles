#!/usr/bin/env bash

set -e

BASE_CONFIG="base"
CONFIG_SUFFIX=".yaml"

META_DIR="meta"
CONFIG_DIR="configs"
PROFILES_DIR="profiles"

DOTBOT_DIR="dotbot"
DOTBOT_BIN="bin/dotbot"

BASE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Seems a bit of a workaround, until I can find a way to make link directives
# construct targets on the fly. Also assumes both of these things cannot simultaneously be true.

# MacOS
if [[ -d "/Users/pete/Library/Application Support" ]]
then
    FIREFOX_PROFILE="/Users/pete/Library/Application Support/Firefox/"
    FIREFOX_PROFILE+="$(grep 'Path=' '/Users/pete/Library/Application Support/Firefox/profiles.ini' | sed s/^Path=//)"
fi

# Linux
if [[ -d "$HOME/.mozilla/firefox" ]]
then
    FIREFOX_PROFILE="~/.mozilla/firefox/"
    FIREFOX_PROFILE+="$(grep 'Path=' ~/.mozilla/firefox/profiles.ini | sed s/^Path=//)"
fi

export FIREFOX_PROFILE



cd "${BASE_DIR}"
#git submodule update --init --recursive --remote


"${BASE_DIR}/${META_DIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASE_DIR}" -c "${META_DIR}/${BASE_CONFIG}${CONFIG_SUFFIX}"

for config in ${@}; do
    "${BASE_DIR}/${META_DIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASE_DIR}" -c "${META_DIR}/${CONFIG_DIR}/${config}${CONFIG_SUFFIX}"
done

